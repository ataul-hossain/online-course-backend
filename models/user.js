import mongoose from "mongoose";

const userSchema = new mongoose.Schema(
  {
    fullname: { type: String, required: true },
    email: { type: String, required: true, unique: true },
    password: { type: String, required: true },
    phone: { type: String, required: true, min: 11, max: 11, unique: true },
    otp: { type: String, required: true },
    profilepic: { type: String },
    videos_watched: [
      {
        course: { type: String },
        module_title: { type: String },
        video_title: { type: String },
        videoId: { type: String },
        time_watched: { type: String },
      },
    ],
    posts: [
      {
        post: { type: String },
      },
    ],
    lovedCourses: [
      {
        courseName: { type: String },
      },
    ],
    sharedCourses: [
      {
        courseName: { type: String },
        shared_num: { type: Number },
      },
    ],
    referralCodes: [
      {
        type: String,
      },
    ],
    enrolledCourses: [
      {
        pg_service_charge_bdt: { type: String },
        pg_service_charge_usd: { type: String },
        pg_card_bank_name: { type: String },
        pg_card_bank_country: { type: String },
        card_number: { type: String },
        card_holder: { type: String },
        cus_phone: { type: String },
        desc: { type: String },
        success_url: { type: String },
        fail_url: { type: String },
        cus_name: { type: String },
        cus_email: { type: String },
        currency_merchant: { type: String },
        convertion_rate: { type: String },
        ip_address: { type: String },
        other_currency: { type: String },
        pay_status: { type: String },
        pg_txnid: { type: String },
        epw_txnid: { type: String },
        mer_txnid: { type: String },
        store_id: { type: String },
        merchant_id: { type: String },
        currency: { type: String },
        store_amount: { type: String },
        pay_time: { type: String },
        amount: { type: String },
        bank_txn: { type: String },
        card_type: { type: String },
        pg_card_risklevel: { type: String },
        pg_error_code_details: { type: String },
        opt_a: { type: String },
        opt_b: { type: String },
        opt_c: { type: String },
      },
    ],
    cancelledPayments: [
      {
        pg_service_charge_bdt: { type: String },
        pg_service_charge_usd: { type: String },
        pg_card_bank_name: { type: String },
        pg_card_bank_country: { type: String },
        card_number: { type: String },
        card_holder: { type: String },
        cus_phone: { type: String },
        desc: { type: String },
        success_url: { type: String },
        fail_url: { type: String },
        cus_name: { type: String },
        cus_email: { type: String },
        currency_merchant: { type: String },
        convertion_rate: { type: String },
        ip_address: { type: String },
        other_currency: { type: String },
        pay_status: { type: String },
        pg_txnid: { type: String },
        epw_txnid: { type: String },
        mer_txnid: { type: String },
        store_id: { type: String },
        merchant_id: { type: String },
        currency: { type: String },
        store_amount: { type: String },
        pay_time: { type: String },
        amount: { type: String },
        bank_txn: { type: String },
        card_type: { type: String },
        pg_card_risklevel: { type: String },
        pg_error_code_details: { type: String },
        opt_a: { type: String },
        opt_b: { type: String },
        opt_c: { type: String },
      },
    ],
    Rank: { type: String },
    Points: { type: Number },
    isAdmin: { type: Boolean, default: false },
    isInstructor: { type: Boolean, default: false },
    isCertified: { type: Boolean, default: false },
    isSeller: { type: Boolean, default: false },
    isFeatured: { type: Boolean, default: false },
  },
  {
    timestamps: true,
  }
);

export default mongoose.model("User", userSchema);
